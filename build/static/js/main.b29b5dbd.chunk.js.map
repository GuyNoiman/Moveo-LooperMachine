{"version":3,"sources":["Button.js","Manager.js","App.js","reportWebVitals.js","index.js"],"names":["Button","state","id","props","soundName","audio","isOn","loopNumber","update","console","log","setState","buttonSwitched","prevProps","this","playAudio","play","pause","variant","border","FormControlLabel","control","Switch","checked","onChange","name","color","label","Component","Manager","Number","numOfSounds","interval","parameters","isPlaying","Audio","bool","componentDidMount","renderButtons","map","button","nextLoopNum","setInterval","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b29b5dbd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport default class Button extends Component {\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        soundName: this.props.soundName,\r\n        audio: this.props.audio,\r\n        isOn: false,\r\n        loopNumber: this.props.loopNumber\r\n    };\r\n\r\n    update = () => {\r\n        console.log(\"update\", this.state);\r\n        this.setState({ isOn: !(this.state.isOn) });\r\n        console.log(\"update\", this.state);\r\n        this.props.buttonSwitched(this.state.isOn);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.loopNumber !== this.props.loopNumber) {\r\n            this.playAudio();\r\n        }\r\n    }\r\n\r\n    playAudio() {\r\n        this.state.isOn ? this.state.audio.play() : this.state.audio.pause();\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <div variant=\"outline-secondary\" border=\"1\">\r\n                <FormControlLabel \r\n                    control={<Switch checked={this.state.isOn} onChange={this.update} name=\"id0\" color=\"primary\" />}\r\n                    label= {this.state.soundName}\r\n                />   \r\n            </div>\r\n        );\r\n    } \r\n}","import React, { Component } from 'react';\r\nimport Button from './Button';\r\n\r\nexport default class Manager extends Component {\r\n\r\n    state = {\r\n        loopNumber: Number(0),\r\n        numOfSounds: Number(0),\r\n        interval: {},\r\n    };\r\n    // handleClick = this.handleClick.bind(this);\r\n\r\n    parameters = [\r\n        {id: \"id1\", soundName: 'Bass_Warwick', isPlaying: false, audio: new Audio('./sounds/Bass_Warwick.mp3')},\r\n        {id: \"id2\", soundName: 'Stutter_breakbeats', isPlaying: false, audio: new Audio('./sounds/Stutter_breakbeats.mp3')},\r\n        {id: \"id3\", soundName: 'Electric_guitar', isPlaying: false, audio: new Audio('./sounds/Electric_guitar.mp3')},\r\n        {id: \"id4\", soundName: 'Future_funkBeats', isPlaying: false, audio: new Audio('./sounds/Future_funkBeats.mp3')},\r\n        {id: \"id5\", soundName: 'Groove', isPlaying: false, audio: new Audio('./sounds/Groove.mp3')},\r\n        {id: \"id6\", soundName: 'MazePolitics', isPlaying: false, audio: new Audio('./sounds/MazePolitics.mp3')},\r\n        {id: \"id7\", soundName: 'Pas_Groove', isPlaying: false, audio: new Audio('./sounds/Pas_Groove.mp3')},\r\n        {id: \"id8\", soundName: 'SilentStar', isPlaying: false, audio: new Audio('./sounds/SilentStar.mp3')},\r\n        {id: \"id9\", soundName: 'StompySlosh', isPlaying: false, audio: new Audio('./sounds/StompySlosh.mp3')}\r\n    ];\r\n         \r\n    buttonSwitched = (bool) => {\r\n        console.log(\"im here\");\r\n        bool ? this.setState({ numOfSounds: this.state.numOfSounds + 1 }) : this.setState({ numOfSounds: this.state.numOfSounds - 1 });\r\n        this.componentDidMount();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.numOfSounds > 0) {\r\n            console.log(this.state.loopNumber);\r\n            let nextLoopNum = Number(this.state.loopNumber) + 1;\r\n            this.setState({ loopNumber: nextLoopNum });\r\n            // this.interval = setInterval(() => this.setState({ time: Date.now() }), 1000);\r\n            this.interval = setInterval(() => this.componentDidMount(), 8000);\r\n        }\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     clearInterval(this.interval);\r\n    // }\r\n\r\n    renderButtons = () => {\r\n        return this.parameters.map(button => {\r\n        //   return <Button id={button.id} soundName={button.soundName} audio={button.audio} buttonSwitched={this.buttonSwitched.bind(this)} />\r\n          return <Button id={button.id} soundName={button.soundName} audio={button.audio} loopNumber={this.state.loopNumber} buttonSwitched={this.buttonSwitched} />\r\n        })\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <div>  \r\n                {this.renderButtons()}\r\n            </div>\r\n        );\r\n    } \r\n}","import './App.css';\nimport Manager from './Manager';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>React Soundboard</h1>\n      <Manager />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}